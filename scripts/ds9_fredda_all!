#!/bin/bash


min_snr=6
if [[ -n "$1" && "$1" != "-" ]]; then
   min_snr=$1
fi

max_snr=1000000000
if [[ -n "$2" && "$2" != "-" ]]; then
   max_snr=$2
fi

do_open=1
if [[ -n "$3" && "$3" != "-" ]]; then
   do_open=$3
fi

merged_file=1
infile=`ls *.cand_merged | tail -1`
if [[ -n "$4" && "$4" != "-" ]]; then
   infile=$4
   merged_file=`echo $infile | awk '{if(index($1,"cand_merged")>0){print 1;}else{print 0;}}'`
fi

fits=`ls -tr *_out_t.fits | tail -1`
if [[ -n "$5" && "$5" != "-" ]]; then
   fits=$5
fi

min_dm=-1
if [[ -n "$6" && "$6" != "-" ]]; then
   min_dm=$6
fi

dm_column=5
if [[ -n "$7" && "$7" != "-" ]]; then
   dm_column=$7
fi

frb_width_pixels=100
if [[ -n "$7" && "$7" != "-" ]]; then
   frb_width_pixels=$7
fi 

zoom=1
if [[ -n "$8" && "$8" != "-" ]]; then
   zoom=$8
fi

echo "#######################################"
echo "PARAMETERS:"
echo "#######################################"
echo "min_snr = $min_snr"
echo "infile  = $infile"
echo "merged_file = $merged_file"
echo "dm_column = $dm_column"
echo "frb_width_pixels = $frb_width_pixels"
echo "zoom = $zoom"
echo "#######################################"

prev_start_t=-1000
while read line 
do
   first=`echo $line | awk '{print $1;}'`   
   
   if [[ $first != "#" ]]; then
      echo
      echo
      echo "-------------------------------------------------------------------"      
      echo "LINE = $line"      
      
      # DM is column 4 in .cand_merged file and column 6 in .cand file !
      if [[ $merged_file -gt 0 ]]; then
         snr=`echo $line | awk '{print $3;}'`
         snr_ok=`echo $line | awk -v min_snr=${min_snr} -v max_snr=${max_snr} '{if($3>min_snr && $3<=max_snr){print 1;}else{print 0;}}'`
         start_t=`echo $line | awk '{s=$6;if(substr(s,1,1)=="|"){s=substr(s,2);}printf("%d\n",s);}'`
         end_t=`echo $line | awk '{s=$8;l=length(s);s=substr(s,1,l-1);printf("%d\n",s);}'`
         dm_ok=`echo $line | awk -v min_dm=${min_dm} -v max_dm=10000000 '{if($4>=min_dm && $4<=max_dm){print 1;}else{print 0;}}'`
         echo "DEBUG (merged_cand file) : snr = $snr -> snr_ok = $snr_ok , dm_ok = $dm_ok"
      else
         snr=`echo $line | awk '{print $1;}'`
         snr_ok=`echo $line | awk -v min_snr=${min_snr} -v max_snr=${max_snr} '{if($1>min_snr && $1<=max_snr){print 1;}else{print 0;}}'`
         start_t=`echo $line | awk -v frb_width_pixels=$frb_width_pixels '{print $2-frb_width_pixels;}'`
         end_t=`echo $line | awk -v frb_width_pixels=$frb_width_pixels '{print $2+frb_width_pixels;}'`
         dm_ok=`echo $line | awk -v min_dm=${min_dm} -v max_dm=10000000 -v dm_column=${dm_column} '{if($dm_column>=min_dm && $dm_column<=max_dm){print 1;}else{print 0;}}'`
         echo "DEBUG : snr = $snr -> snr_ok = $snr_ok , dm_ok = $dm_ok"
      fi
      
      
      # line x1 y1 x2 y2 # line=[0|1] [0|1]
      
      if [[ $snr_ok -gt 0 && $dm_ok -gt 0 ]]; then
         max_y=`fitshdr $fits | grep NAXIS2 | awk '{print $3;}'`
         diff=$(($start_t-$prev_start_t))
         
         if [[ $diff -gt $frb_width_pixels ]]; then      
            echo " snr=$snr , snr_ok = $snr_ok   start_time = $start_t , end_t = $end_t"
            echo "line $start_t 0 $start_t $max_y # color = green" > ${start_t}_${end_t}.reg
            echo "line $end_t 0 $end_t $max_y # color = green" >> ${start_t}_${end_t}.reg

            if [[ $do_open -gt 0 ]]; then      
               echo "ds9_fredda! ${start_t} ${fits} - - ${zoom} - ${start_t}_${end_t}.reg"
               ds9_fredda! ${start_t} ${fits} - - ${zoom} - ${start_t}_${end_t}.reg 
            
               sleep 1
            else 
               echo "WARNING : opening in ds9 is not requred"
            fi
            prev_start_t=$start_t
         else
            echo "Event at $start_t not much differnet than the previous one at $prev_start_t -> skipped"
         fi
      else
         echo "   INFO : snr = $snr is too low or wrong dm (dm_ok = $dm_ok) -> event not shown"
      fi
   else
      echo "$line"
   fi
done < $infile

# < `cat $infile | awk '{if($1!="#"){print $0;}}'`

